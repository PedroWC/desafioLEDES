name: Pipeline de CI

on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Fazer checkout do código
      uses: actions/checkout@v2

    - name: Instalar JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cachear camadas do Docker
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Instalar Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Construir e iniciar contêineres
      run: docker-compose up --build

    - name: Ver containers!
      run: docker container ps

    - name: Aguardar os serviços estarem prontos
      run: |
        MAX_RETRIES=20
        RETRY_INTERVAL=40
        count=0
        while ! docker-compose exec -T api curl -sf http://localhost:8080/healthcheck; do
          echo "Aguardando o serviço da API ficar pronto..."
          sleep $RETRY_INTERVAL
          count=$((count + 1))
          if [ $count -ge $MAX_RETRIES ]; then
            echo "Número máximo de tentativas atingido. A API não está pronta."
            exit 1
          fi
        done
        echo "Serviço da API está pronto!"

    - name: Executar testes da API
      run: docker-compose exec -T api ./mvnw test

    - name: Executar testes do Frontend
      run: docker-compose exec -T frontend npm test

    - name: Parar e remover contêineres
      run: docker-compose down

    - name: Limpar imagens do Docker
      run: docker system prune -f
